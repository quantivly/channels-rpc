[tool.poetry]
authors = ["Zvi Baratz <zvi.baratz@quantivly.com>"]
description = "JSON-RPC implementation for Django's channels library."
name = "channels-rpc"
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
python = ">=3.9"
channels = "^4.0.0"

[tool.poetry.group.dev.dependencies]
aiounittest = "^1.4.2"
black = "^23.10.0"
django = "^4.2.6"
ipython = "^8.14.0"
pre-commit = "^3.3.2"
pytest = "^7.3.1"
ruff = "^0.1.1"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
python_files = [
  "tests.py",
  "test_*.py",
]

# ==== Coverage ====
[tool.coverage.run]
include = ["channels_rpc/**"]
omit = ["*/tests/*"]

[tool.black]
skip-string-normalization = true
target-version = ["py39"]

[tool.ruff]
ignore = [
  "B027", # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003", # Ignore checks for possible passwords
  "S101",
  "S105",
  "S106",
  "S107", # Ignore complexity
  "C901",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
  "RUF012",
]
ignore-init-module-imports = true
select = [
  "A",
  "ARG",
  "B",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "TID",
  "UP",
  "W",
  "YTT",
]
target-version = "py39"
unfixable = [
  "F401",
]

[tool.ruff.isort]
known-first-party = ["channels_rpc"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
"tests/**/*" = ["PLR2004", "S101", "TID252"]

# ==== mypy ====
[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true
python_version = "3.9"
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
